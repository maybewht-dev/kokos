from aiogram import types
from dispatcher import dp, bot
import sqlite3
from .db_check import CheckDB
from aiogram.types import InputFile, ContentType, Message, ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

check = CheckDB()

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    try:
        ub = False
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        c.execute(f"SELECT user_id FROM black_list WHERE user_id = {message.from_user.id}")
        items = c.fetchall()
        for el in items:
            ub = True
            await message.answer("–≤—ã –∑–∞–±–∞–Ω–µ–Ω—ã!")
            db.commit()
            db.close()
            print(forerrorprint)
        check.add_user(message)
    except:
        try:
            check.update(message)
        except:
            pass
    if ub:
        pass
    else:
        await message.answer(f"""üëã –ø—Ä–∏–≤–µ—Ç, <a href='tg://user?id={message.from_user.id}'>{message.from_user.first_name}</a>!

ü§ñ —è <b>–∫–æ–∫–æ—Å - –ª—É—á—à–∏–π –ø—Å–∞ –∏ —á–∞—Ç –±–æ—Ç!</b>!
üòú —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –ª—É—á—à–µ —á–µ–º —Ç—ã!!! —Å—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤!!!!

‚ÑπÔ∏è /help - –ø–æ–º–æ—â—å""", parse_mode="HTML")

@dp.message_handler(commands=['help', 'info'])
async def helpp(message: types.Message):
    await message.answer("""<b>–∏—Ç–∞–∫, lets wrap it up:</b>

—á–µ–º —è –ª—É—á—à–µ –∏—Ä–∏—Å–∞: —è –∫–æ–∫–æ—Å
–∫—Ç–æ –º–µ–Ω—è —Å–æ–∑–¥–∞–ª: –º–∞–º–∞ –ø—Å–∞ –∫–∞–∫–æ–∑ –∏ –¥–∏–º–∞ —Å–æ—Ä–∫–µ–Ω(@whattupxd)
–∑–∞—á–µ–º —è –Ω—É–∂–µ–Ω: —è –∫–æ–∫–æ—Å
–Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª: –∫–æ–∫–æ—Å @kokosmanager

<b>–≤–æ–ø—Ä–æ—Å—ã –æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ!?</b>

—è –Ω–µ —Ç–∏–º–æ—Ñ–µ–π, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–µ —Ä–∞–±. –µ—Å–ª–∏ —è –ª–∞–≥–∞—é - —Ç–≤–æ–∏ –ø—Ä–æ–±–ª–µ–º—ã, —è –ø–µ—Å –∫–æ–∫–æ—Å.
–∫–æ–∫–æ—Å–∏–∫.
–ø–∏—à–∏ @whattupxd –∏–ª–∏ studios@truepixel.ru –∏ –∑–∞–º–æ–ª–∫–Ω–∏.

/commands - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥; –∫–æ–∫–æ—Å–∏–∫ - –∫–æ–∫–æ—Å–∏–∫ –∏ truepixel studios""", parse_mode="HTML")




@dp.message_handler(text=['–∫–æ–∫–æ—Å–∏–∫', '–ö–æ–∫–æ—Å–∏–∫'])
async def family(message: types.Message):
    await message.answer("""<b>–∫–æ–∫–æ—Å–∏–∫ x truepixel studios:</b>

–≤–º–µ—Å—Ç–µ —Å 19 –∏—é–ª—è 2023 –≥–æ–¥–∞ - –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º–æ–º–µ–Ω—Ç!
–≥–∞—Ñ –≥–∞—Ñ –∏ —è —Å–æ–∂—Ä–∞–ª –≤—Å–µ —á—Ç–æ –±—ã–ª–æ –Ω–∞ —Å—Ç–æ–ª–µ

–¥–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞       // –Ω–∞–∑–≤–∞–Ω–∏–µ       // —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏
—è –ø–µ—Å             | –∫–æ–∫–æ—Å | —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä | @whattupxd / iris_cm API
–¥–∞–≤–Ω–æ             | –ø–∏–∫—Å–µ–ª—å              | –Ω–∞ –æ—Å–Ω–æ–≤–µ jmusicbot, red / @whattupxd
??                | —Å–∫–æ—Ä–æ!!!             | –µ—â–µ —É–∑–Ω–∞–µ—Ç–µ """, parse_mode="HTML")


@dp.message_handler(commands=['ckb'])
async def process_ckb_command(message: types.Message):
    await message.answer("""—Ñ–∏–∫—Å–∏–∫–∏ –æ—á–∏—Å—Ç–∏–ª–∏ —Ç–≤–æ—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫!
–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —á–∏—Å—Ç–∞!""", reply_markup=ReplyKeyboardRemove())

@dp.message_handler(commands=['ban'])
async def process_ckb_command(message: types.Message):
    if message.from_user.id == 1326911178:
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        try:
            buid = int(message.text.split(' ')[1])
            prich = message.text[len(str(buid))+6:]
            ubed = False
            if prich == '':
                prich = '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
            c.execute(f"SELECT * FROM black_list WHERE user_id = {buid}")
            items = c.fetchall()
            for el in items:
                ubed = True
            if ubed:
                await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω")
            else:
                c.execute(f"SELECT user_id, user_nick FROM user_data WHERE user_id = {buid}")
                items = c.fetchall()
                for el in items:
                    ui = el[0]
                    un = el[1]
                    cb = True
                try:
                    if cb:
                        c.execute(f"DELETE FROM user_data WHERE user_id = {buid}")
                        try:
                            c.execute(f"DELETE FROM stock_market WHERE user_id = {buid}")
                            c.execute(f"DELETE FROM stock_market_zakaz WHERE user_id = {buid}")
                        except:
                            pass
                        c.execute(f"DELETE FROM purchases WHERE user_id = {buid}")
                        c.execute(f"DELETE FROM nicks_auction WHERE user_id = {buid}")
                        jobs = ['teacher','programmer','killer','farmer','esportsman','developer','caver','builder','bloger','architector']
                        for job in jobs:
                            try:
                                c.execute(f"DELETE FROM job_{job} WHERE worker_id = {buid}")
                            except:
                                pass
                        games = ['stealing','slot_machine','farm','darts','cube','clicker']
                        for game in games:
                            c.execute(f"DELETE FROM game_{game} WHERE user_id = {buid}")
                        try:
                            for i in range(1,501):
                                c.execute(f"UPDATE clan_data SET mb{i} = Null WHERE mb{i} = {buid}")
                            c.execute(f"DELETE FROM clan_events WHERE user_id = {buid}")
                            c.execute(f"DELETE FROM clan_data WHERE leader_id = {buid}")
                        except:
                            pass
                        try:
                            c.execute("INSERT INTO black_list VALUES (?)",
                                      (buid,))
                            await message.answer(f"""<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={ui}'>{un}</a> –∑–∞–±–∞–Ω–µ–Ω!</b>

<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {prich}""")
                            await bot.send_message(buid, f"""<b>–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã!</b>
<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {prich}

–ï—Å–ª–∏ –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –ø–æ –æ—à–∏–±–∫–µ, –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: @whattupxd""", parse_mode="HTML")
                        except:
                            pass
                except:
                    await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        except:
            await message.answer("/ban ID –ü—Ä–∏—á–∏–Ω–∞")
        db.commit()
        db.close()


@dp.message_handler(commands=['unban'])
async def process_ckb_command(message: types.Message):
    if message.from_user.id == 1326911178:
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        try:
            buid = int(message.text.split(' ')[1])
            ubed = True
            c.execute(f"SELECT * FROM black_list WHERE user_id = {buid}")
            items = c.fetchall()
            for el in items:
                ubed = False
            if ubed:
                await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω")
            else:
                c.execute(f"DELETE FROM black_list WHERE user_id = {buid}")
                await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω!")
                try:
                    await bot.send_message(buid, '–í–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª–∏!')
                except:
                    pass
        except:
            await message.answer("/ban ID –ü—Ä–∏—á–∏–Ω–∞")
        db.commit()
        db.close()


@dp.message_handler(commands=['banlist'])
async def process_ckb_command(message: types.Message):
    if True:
        db = sqlite3.connect('chapcha_data_base.db')
        c = db.cursor()
        try:
            c.execute(f"SELECT * FROM black_list")
            items = c.fetchall()
            bu = []
            for el in items:
                for e in el:
                    bu.append(e)
            if len(bu) == 0:
                await message.answer("<b>–ë–∞–Ω–ª–∏—Å—Ç</b>\n\n–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç", parse_mode="HTML")
            else:
                msg = ''
                for i in bu:
                    msg += str(i) + '\n'
                await message.answer(f"<b>–ë–∞–Ω–ª–∏—Å—Ç</b>\n\n{msg}", parse_mode="HTML")
        except:
            pass
        db.commit()
        db.close()


@dp.message_handler(text=['id'])
async def process_ckb_command(message: types.Message):
    if True:
        try:
            try:
                await message.answer(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{message.reply_to_message.from_user.id}</code>", parse_mode="HTML")
            except:
                await message.answer(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{message.from_user.id}</code>", parse_mode="HTML")
        except:
            pass