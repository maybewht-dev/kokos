from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from dispatcher import dp, bot
from aiogram.dispatcher.filters import Text
from aiogram.utils.exceptions import (MessageToEditNotFound, MessageCantBeEdited, MessageCantBeDeleted,
                                      MessageToDeleteNotFound)
from aiogram.types import InputFile, ContentType, Message, ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData
from aiogram.types.callback_query import CallbackQuery
import sqlite3
import datetime

@dp.message_handler(Text(startswith=['—Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω', '–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω']))
async def process_start_command(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        comm = message.text[13:]
        if comm.find("""
""") != -1:
            clan_name = comm.split("""
""")[0]
            clan_desc = comm[len(clan_name)+1:]
        else:
            clan_name = comm
            clan_desc = None
        if len(clan_name) > 20:
            await message.answer("–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∞–Ω–∞ 20 —Å–∏–º–≤–æ–ª–æ–≤")
            print(forerrorprint)
        if clan_desc != None:
            if len(clan_desc) > 50:
                await message.answer("–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∫–ª–∞–Ω–∞ 50 —Å–∏–º–≤–æ–ª–æ–≤")
                print(forerrorprint)
        if clan_name == '' or clan_name == ' ':
            await message.answer("—Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω –ù–∞–∑–≤–∞–Ω–∏–µ\n–û–ø–∏—Å–∞–Ω–∏–µ")
            print(forerrorprint)
        if clan_desc == '' or clan_desc == ' ':
            clan_desc == None
        ui = message.from_user.id
        c.execute(f"SELECT user_prefix, user_nick, user_chapchas FROM user_data WHERE user_id = {message.from_user.id}")
        items = c.fetchall()
        for el in items:
            upr = el[0]
            un = el[1]
            uch = el[2]
        try:
            c.execute(f"SELECT leader_id FROM clan_data WHERE leader_id = {ui}")
            items = c.fetchall()
            for el in items:
                li = el[0]
            if li == ui:
                await message.answer("—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª–∞–Ω!")
        except:
            try:
                c.execute(f"SELECT clan_name FROM clan_data")
                items = c.fetchall()
                for el in items:
                    if clan_name == el[0]:
                        await message.answer("–∫–ª–∞–Ω —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        gcc = False
                        break
                    else:
                        pass
                if gcc:
                    print(forerrorprint)
            except:
                try:
                    gccc = True
                    c.execute(f"SELECT * FROM clan_data")
                    items = c.fetchall()
                    for el in items:
                        for e in el:
                            if e == message.from_user.id:
                                await message.answer("–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!")
                                gccc = False
                    if gccc:
                        print(forerrorprint)
                except:
                    if uch >= 500:
                        cncl = InlineKeyboardButton("–æ—Ç–º–µ–Ω–∞", callback_data='cnclcreateclan')
                        create = InlineKeyboardButton("—Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω", callback_data='createclan')
                        floor = InlineKeyboardMarkup().add(cncl).add(create)
                        if clan_desc != None:
                            await message.answer(f"""‚öúÔ∏è | –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={ui}'>{un}</a> —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–Ω:

üè∑ | <b>–Ω–∞–∑–≤–∞–Ω–∏–µ:</b> {clan_name}
üóì | <b>–æ–ø–∏—Å–∞–Ω–∏–µ:</b> {clan_desc}
üí≤ | <b>—Ü–µ–Ω–∞:</b> 500 –∫–æ–∫–æ—Å–æ–≤""", parse_mode="HTML", reply_markup=floor)
                            try:
                                c.execute(f"INSERT INTO clan_events VALUES (?, ?, ?, ?)",
                                          (ui, clan_name, clan_desc, None))
                            except:
                                c.execute(f"UPDATE clan_events SET clan_name = {clan_name}, clan_desc = {clan_desc} WHERE user_id = {ui}")
                        else:
                            await message.answer(f"""‚öúÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={ui}'>{un}</a> —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–Ω:

üè∑ | <b>–Ω–∞–∑–≤–∞–Ω–∏–µ:</b> {clan_name}
üí≤ | <b>—Ü–µ–Ω–∞:</b> 500 –∫–æ–∫–æ—Å–æ–≤""", parse_mode="HTML", reply_markup=floor)
                            try:
                                c.execute(f"INSERT INTO clan_events VALUES (?, ?, ?, ?)",
                                          (ui, clan_name, '', None))
                            except:
                                c.execute(f"UPDATE clan_events SET clan_name = {clan_name}, clan_desc = '' WHERE user_id = {ui}")
                    else:
                        await message.answer("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∫–æ—Å–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–Ω–∞!")
    except:
        pass
    db.commit()
    db.close()





#qsdeleteclan
@dp.message_handler(Text(startswith=['—É–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω', '–£–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω']))
async def process_start_command(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        ci = message.text[14:]
        c.execute(f"SELECT leader_id, clan_name FROM clan_data WHERE leader_id = {message.from_user.id}")
        items = c.fetchall()
        cd = []
        for el in items:
            for e in el:
                cd.append(e)
        if len(cd) < 2:
            await message.answer("—É –í–∞—Å –Ω–µ—Ç—É –∫–ª–∞–Ω–∞")
            print(forerrorprint)
        try:
            c.execute("INSERT INTO clan_events VALUES (?, ?, ?, ?)",
                      (message.from_user.id, None, None, ci))
        except:
            c.execute(f"UPDATE clan_events SET clan_del = {ci} WHERE user_id = {message.from_user.id}")
        cncl = InlineKeyboardButton("–æ—Ç–º–µ–Ω–∞", callback_data='cncldelclan')
        dc = InlineKeyboardButton("—É–¥–∞–ª–∏—Ç—å", callback_data='delclan')
        floor = InlineKeyboardMarkup().add(cncl).add(dc)
        await message.answer(f"—É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–∞ <b>{cd[1]}</b>", parse_mode="HTML", reply_markup=floor)
    except:
        pass


@dp.callback_query_handler(text=['cnclcreateclan'])
async def turn_on_bad_words(call: types.CallbackQuery):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        c.execute(f"DELETE FROM clan_events WHERE user_id = {call.from_user.id}")
        await call.message.edit_text("—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    except:
        pass
    db.commit()
    db.close()

@dp.callback_query_handler(text=['cncldelclan'])
async def turn_on_bad_words(call: types.CallbackQuery):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        c.execute(f"DELETE FROM clan_events WHERE user_id = {call.from_user.id}")
        await call.message.edit_text("—É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    except:
        pass
    db.commit()
    db.close()

@dp.callback_query_handler(text=['createclan'])
async def turn_on_bad_words(call: types.CallbackQuery):
    date_pre = datetime.datetime.now()
    date_time = date_pre.strftime("%d.%m.%y %H:%M")
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        c.execute(f"SELECT user_id, user_prefix, user_nick, user_reputation, user_points, user_eclairs, user_coins, user_chapchas, user_freebases FROM user_data WHERE user_id = {call.from_user.id}")
        items = c.fetchall()
        for el in items:
            ui = el[0]
            upr = el[1]
            un = el[2]
            ur = el[3]
            up = el[4]
            uec = el[5]
            uc = el[6]
            uch = el[7]
            uf = el[8]
        if ui == '' or ui == None:
            await call.message.edit_text("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!\n/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
            print(forerrorprint)
        try:
            c.execute(f"SELECT leader_id FROM clan_data WHERE leader_id = {ui}")
            items = c.fetchall()
            for el in items:
                li = el[0]
            if li == ui:
                await message.answer("—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª–∞–Ω!")
            else:
                print(forerrorprint)
        except:
            try:
                c.execute(f"SELECT clan_name FROM clan_data")
                items = c.fetchall()
                for el in items:
                    if clan_name == el[0]:
                        await message.answer("–∫–ª–∞–Ω —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        gcc = False
                    else:
                        pass
                if gcc:
                    print(forerrorprint)
            except:
                try:
                    c.execute(f"SELECT * FROM clan_events WHERE user_id = {call.from_user.id}")
                    items = c.fetchall()
                    for el in items:
                        clan_name = el[1]
                        clan_desc = el[2]
                except:
                    await call.message.edit_text("–æ—à–∏–±–∫–∞")
                if uch >= 500:
                    price_chapchas = uch - 500
                    if clan_desc == '' or clan_desc == None:
                        c.execute("INSERT INTO clan_data
                                (ui, clan_name, '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', date_time, '–û–±—â–∞–≥–∞', ur, 0, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None))
                    else:
                        c.execute("INSERT INTO clan_data
                                (ui, clan_name, clan_desc, date_time, '–û–±—â–∞–≥–∞', ur, 0, 0, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None))
                    
                    c.execute(f"DELETE FROM clan_events WHERE user_id = {ui}")
                    c.execute(f"UPDATE user_data SET user_chapchas = {price_chapchas} WHERE user_id = {ui}")
                    await call.message.edit_text(f"–∫–ª–∞–Ω <b>{clan_name}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! —É—Ä–∞!", parse_mode="HTML")
                else:
                    await call.message.edit_text("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–Ω–∞!")
    except:
        pass
    db.commit()
    db.close()

@dp.callback_query_handler(text=['delclan'])
async def turn_on_bad_words(call: types.CallbackQuery):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        c.execute(f"SELECT clan_del FROM clan_events WHERE user_id = {call.from_user.id}")
        items = c.fetchall()
        for el in items:
            ci = el[0]
        c.execute(f"SELECT clan_name FROM clan_data WHERE leader_id = {ci}")
        items = c.fetchall()
        for el in items:
            cn = el[0]
        if ci != call.from_user.id:
            await call.answer("—à–∞–ª–æ–≤–ª–∏–≤—ã–µ —Ä—É—á–∫–∏!")
        else:
            c.execute(f"DELETE FROM clan_data WHERE leader_id = {ci}")
            c.execute(f"DELETE FROM clan_events WHERE user_id = {ci}")
            await call.message.edit_text(f"–∫–ª–∞–Ω <b>{cn}</b> —É–¥–∞–ª–µ–Ω", parse_mode="HTML")
    except:
        pass
    db.commit()
    db.close()


@dp.message_handler(text=['–ú–æ–π –∫–ª–∞–Ω', '–ö–ª–∞–Ω', '–º–æ–π –∫–ª–∞–Ω', '–∫–ª–∞–Ω'])
async def my_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    c.execute(f"SELECT * from clan_data")
    items = c.fetchall()
    clanl = []
    try:
        for el in items:
            for e in el:
                clanl.append(e)
        clan = []
        for el in clanl:
            if el == '' or el == None or el == 'None':
                pass
            else:
                clan.append(el)
        li = 0
        mbn = 0
        for el in clan:
            if el == message.from_user.id:
                for i in range(1, 500):
                    c.execute(f"SELECT leader_id FROM clan_data WHERE mb{i} = {message.from_user.id}")
                    items = c.fetchall()
                    for el in items:
                        li = 0
                        if el[0] == None or el[0] == '':
                            pass
                        else:
                            li = el[0]
                            mbn = i
                            break
                    if li != 0:
                        break
        c.execute(f"SELECT leader_id FROM clan_data WHERE leader_id = {message.from_user.id}")
        items = c.fetchall()
        for el in items:
            if el[0] == None or el[0] == '':
                pass
            else:
                li = el[0]
        if li == 0 and mbn == 0:
            await message.answer("–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ((")
        else:
            if mbn != 0:
                c.execute(f"SELECT leader_id, clan_name, clan_desc, clan_register_date, clan_prefix, clan_reputation, clan_chapchas, clan_freebases FROM clan_data WHERE mb{mbn} = {message.from_user.id}")
            else:
                c.execute(f"SELECT leader_id, clan_name, clan_desc, clan_register_date, clan_prefix, clan_reputation, clan_chapchas, clan_freebases FROM clan_data WHERE leader_id = {message.from_user.id}")
            items = c.fetchall()
            for el in items:
                li = el[0]
                cn = el[1]
                cd = el[2]
                cregd = el[3]
                cpr = el[4]
                crd = el[5]
                cch = el[6]
                cf = el[7]
            c.execute(f"SELECT user_prefix, user_nick, user_reputation FROM user_data WHERE user_id = {li}")
            items = c.fetchall()
            for el in items:
                upr = el[0]
                un = el[1]
                urep = el[2]
            c.execute(f"SELECT * FROM clan_data WHERE leader_id = {li}")
            items = c.fetchall()
            mbsl = []
            for el in items:
                for e in el:
                    mbsl.append(e)
            mbs = []
            itsn = -8
            for el in mbsl:
                itsn += 1
                if itsn > 0:
                    if el == '' or el == None or el == 'None':
                        pass
                    else:
                        mbs.append(el)
            sumar = urep
            mbicn = 0
            for el in mbs:
                mbicn += 1
                c.execute(f"SELECT user_reputation FROM user_data WHERE user_id = {el}")
                items = c.fetchall()
                for el in items:
                    urta = el[0]
                try:
                    sumar += urta
                except:
                    itsn -= 1
                    c.execute(f"UPDATE clan_data SET mb{mbicn} = Null WHERE leader_id = {li}")
            if sumar != crd:
                c.execute(f"UPDATE clan_data SET clan_reputation = {sumar} WHERE leader_id = {li}")
            if cd == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                await message.answer(f"""–ö–ª–∞–Ω <b><i>[{cpr}]</i></b> {cn}

<b>–ª–∏–¥–µ—Ä:</b> <b><i>[{upr}]</i></b> <a href='tg://user?id={li}'>{un}</a>
<b>–¥–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è:</b> {cregd}
<b>—Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> {sumar}
<b>—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {len(clan) - 7}

–±–∞–ª–∞–Ω—Å:
<b>–∫–æ–∫–æ—Å—ã:</b> {cch}
<b>—Ç–∏–º–æ—à–∏:</b> {cf}

<code>–≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω {li}</code>""", parse_mode="HTML")
            else:
                await message.answer(f"""–ö–ª–∞–Ω <b><i>[{cpr}]</i></b> {cn}
{cd}

<b>–ª–∏–¥–µ—Ä:</b> <b><i>[{upr}]</i> </b><a href='tg://user?id={li}'>{un}</a>
<b>–¥–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è:</b> {cregd}
<b>—Ä–µ–ø—É—Ç–∞—Ü–∏—è:</b> {sumar}
<b>—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {len(clan) - 7}

–±–∞–ª–∞–Ω—Å:
<b>–∫–æ–∫–æ—Å—ã:</b> {cch}
<b>—Ç–∏–º–æ—à–∏:</b> {cf}

<code>–≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω {li}</code>""", parse_mode="HTML")
    except:
        await message.answer("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!\n/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    db.commit()
    db.close()


@dp.message_handler(Text(startswith=['–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω', '–≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω']))
async def vst_v_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        ci = message.text[16:]
        try:
            c.execute(f"SELECT user_id, user_prefix, user_nick, user_reputation FROM user_data WHERE user_id = {message.from_user.id}")
            items = c.fetchall()
            for el in items:
                ui = el[0]
                upr = el[1]
                un = el[2]
                ur = el[3]
            try:
                c.execute(f"SELECT * FROM clan_data WHERE leader_id = {ci}")
                items = c.fetchall()
                cdl = []
                for el in items:
                    cn = el[1]
                    for e in el:
                        cdl.append(e)
                cd = []
                for el in cdl:
                    if el == '' or el == None or el == 'None':
                        pass
                    else:
                        cd.append(el)
                c.execute(f"SELECT * FROM clan_data")
                items = c.fetchall()
                for el in items:
                    for e in el:
                        if e == message.from_user.id:
                            await message.answer("–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!")
                            print(forerrorprint)
                for el in cd:
                    if el == message.from_user.id:
                        await message.answer(f"<a href='tg://user?id={ui}'>{un}</a> –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!", parse_mode="HTML")
                        print(forerrorprint)
                print(message.from_user.id)
                mbnn = -8
                for el in items:
                    for e in el:
                        mbnn += 1
                        if e == '' or e == None or e == 'None' and mbnn > 0:
                            c.execute(f"UPDATE clan_data SET mb{mbnn} = {message.from_user.id} WHERE leader_id = {ci}")
                            await message.answer(f"<a href='tg://user?id={ui}'>{un}</a> –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–ª–∞–Ω <b>{cn}</b>!", parse_mode="HTML")
                            print(forerrorprint)
                c.execute(f"UPDATE clan_data SET mb{len(cd) - 7} = {message.from_user.id} WHERE leader_id = {ci}")
                await message.answer(f"<a href='tg://user?id={ui}'>{un}</a> –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–ª–∞–Ω <b>{cn}</b>!", parse_mode="HTML")
            except:
                pass
        except:
            await message.answer("–≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω ID")
    except:
        pass
    db.commit()
    db.close()

@dp.message_handler(Text(startswith=['–ü–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω', '–ø–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω']))
async def vst_v_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        ci = int(message.text[14:])
        try:
            if ci == message.from_user.id:
                await message.answer("–ª–∏–¥–µ—Ä –∫–ª–∞–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω!")
                print(forerrorprint)
            c.execute(f"SELECT user_id, user_prefix, user_nick, user_reputation FROM user_data WHERE user_id = {message.from_user.id}")
            items = c.fetchall()
            for el in items:
                ui = el[0]
                upr = el[1]
                un = el[2]
                ur = el[3]
            try:
                c.execute(f"SELECT * FROM clan_data WHERE leader_id = {ci}")
                items = c.fetchall()
                cdl = []
                for el in items:
                    cn = el[1]
                    for e in el:
                        cdl.append(e)
                cd = []
                for el in cdl:
                    if el == '' or el == None or el == 'None':
                        pass
                    else:
                        cd.append(el)
                mbn = -8
                for el in cd:
                    mbn += 1
                    if el == message.from_user.id and mbn > 0:
                        c.execute(f"UPDATE clan_data SET mb{mbn} = 'None' WHERE leader_id = {ci}")
                        await message.answer(f"<a href='tg://user?id={ui}'>{un}</a> –ø–æ–∫–∏–Ω—É–ª(–∞) –∫–ª–∞–Ω <b>{cn}</b>!", parse_mode="HTML")
                        print(forerrorprint)
                await message.answer("–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —ç—Ç–æ–º –∫–ª–∞–Ω–µ")
            except:
                pass
        except:
            pass
    except:
        await message.answer("–ø–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω ID")
    db.commit()
    db.close()

@dp.message_handler(Text(startswith=['–í—ã–≥–Ω–∞—Ç—å –∏–∑ –∫–ª–∞–Ω–∞', '–≤—ã–≥–Ω–∞—Ç—å –∏–∑ –∫–ª–∞–Ω–∞']))
async def vst_v_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        mi = int(message.text[17:])
        try:
            c.execute(f"SELECT user_nick FROM user_data WHERE user_id = {mi}")
            items = c.fetchall()
            for el in items:
                un = el[0]
            c.execute(f"SELECT * FROM clan_data WHERE leader_id = {message.from_user.id}")
            items = c.fetchall()
            clanl = []
            for el in items:
                for e in el:
                    clanl.append(e)
            clan = []
            for el in clanl:
                if el == '' or el == None or el == 'None':
                    pass
                else:
                    clan.append(el)
            if len(clan) < 11:
                await message.answer("—É –í–∞—Å –Ω–µ—Ç—É –∫–ª–∞–Ω–∞")
            else:
                mbn = -8
                ck = False
                cn = clan[1]
                for el in clan:
                    mbn += 1
                    if el == mi and mbn > 0:
                        ck = True
                        break
                    elif el == mi and mbn < 0:
                        await message.answer("–≤—ã –ª–∏–¥–µ—Ä –∫–ª–∞–Ω–∞, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —Å–µ–±—è!")
                        mbn = -8
                    else:
                        pass
                if ck and mbn > 0:
                    c.execute(f"UPDATE clan_data SET mb{mbn} = 'None' WHERE leader_id = {message.from_user.id}")
                    await message.answer(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={mi}'>{un}</a> –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–ª–∞–Ω–∞ <b>{cn}</b>", parse_mode="HTML")
                else:
                    await message.answer("–≤ –í–∞—à–µ–º –∫–ª–∞–Ω–µ –Ω–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É–∫–∞–∑–∞–Ω—ã–º ID")
        except:
            pass
    except:
        await message.answer("–≤—ã–≥–Ω–∞—Ç—å –∏–∑ –∫–ª–∞–Ω–∞ ID")
    db.commit()
    db.close()

@dp.message_handler(text=['–ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞', '–ö–ª–∞–Ω –±–∞–ª–∞–Ω—Å', '–±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞', '–∫–ª–∞–Ω –±–∞–ª–∞–Ω—Å'])
async def vst_v_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        c.execute(f"SELECT * from clan_data")
        items = c.fetchall()
        clanl = []
        for el in items:
            for e in el:
                clanl.append(e)
        clan = []
        for el in clanl:
            if el == '' or el == None or el == 'None':
                pass
            else:
                clan.append(el)
        li = 0
        mbn = 0
        for el in clan:
            if el == message.from_user.id:
                for i in range(1, 500):
                    c.execute(f"SELECT leader_id FROM clan_data WHERE mb{i} = {message.from_user.id}")
                    items = c.fetchall()
                    for el in items:
                        li = 0
                        if el[0] == None or el[0] == '':
                            pass
                        else:
                            li = el[0]
                            mbn = i
                            break
                    if li != 0:
                        break
        c.execute(f"SELECT leader_id FROM clan_data WHERE leader_id = {message.from_user.id}")
        items = c.fetchall()
        for el in items:
            if el[0] == None or el[0] == '':
                pass
            else:
                li = el[0]
        if li == 0 and mbn == 0:
            await message.answer("–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ((")
        else:
            if mbn != 0:
                c.execute(f"SELECT clan_name, clan_prefix, clan_chapchas, clan_freebases FROM clan_data WHERE mb{mbn} = {message.from_user.id}")
            else:
                c.execute(f"SELECT clan_name, clan_prefix, clan_chapchas, clan_freebases FROM clan_data WHERE leader_id = {message.from_user.id}")
            items = c.fetchall()
            for el in items:
                cn = el[0]
                cpr = el[1]
                cch = el[2]
                cf = el[3]
            await message.answer(f"""–ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ <b><i>[{cpr}]</i></b> {cn}

<b>–∫–æ–∫–æ—Å—ã:</b> {cch}
<b>—Ç–∏–º–æ—à–∏:</b> {cf}""", parse_mode="HTML")
    except:
        pass
    db.commit()
    db.close()

@dp.message_handler(Text(startswith=['–í–ª–æ–∂–∏—Ç—å –∫–æ–∫–æ—Å—ã', '–í–∫–∏–Ω—É—Ç—å –∫–æ–∫–æ—Å—ã', '–≤–ª–æ–∂–∏—Ç—å –∫–æ–∫–æ—Å—ã', '–≤–∫–∏–Ω—É—Ç—å –∫–æ–∫–æ—Å—ã']))
async def vst_v_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        num = int(message.text[14:])
        try:
            c.execute(f"SELECT * from clan_data")
            items = c.fetchall()
            clanl = []
            for el in items:
                for e in el:
                    clanl.append(e)
            clan = []
            for el in clanl:
                if el == '' or el == None or el == 'None':
                    pass
                else:
                    clan.append(el)
            li = 0
            mbn = 0
            for el in clan:
                if el == message.from_user.id:
                    for i in range(1, 500):
                        c.execute(f"SELECT leader_id FROM clan_data WHERE mb{i} = {message.from_user.id}")
                        items = c.fetchall()
                        for el in items:
                            li = 0
                            if el[0] == None or el[0] == '':
                                pass
                            else:
                                li = el[0]
                                mbn = i
                                break
                        if li != 0:
                            break
            c.execute(f"SELECT leader_id FROM clan_data WHERE leader_id = {message.from_user.id}")
            items = c.fetchall()
            for el in items:
                if el[0] == None or el[0] == '':
                    pass
                else:
                    li = el[0]
            if li == 0 and mbn == 0:
                await message.answer("–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ((")
            else:
                if mbn != 0:
                    c.execute(f"SELECT clan_name, clan_chapchas FROM clan_data WHERE mb{mbn} = {message.from_user.id}")
                else:
                    c.execute(f"SELECT clan_name, clan_chapchas FROM clan_data WHERE leader_id = {message.from_user.id}")
                items = c.fetchall()
                for el in items:
                    cn = el[0]
                    cch = el[1]
                c.execute(f"SELECT user_nick, user_prefix, user_chapchas FROM user_data WHERE user_id = {message.from_user.id}")
                items = c.fetchall()
                for el in items:
                    un = el[0]
                    upr = el[1]
                    uch = el[2]
                if num <= uch:
                    if num > 0:
                        price_chapchas = cch + num
                        c.execute(f"UPDATE clan_data SET clan_chapchas = {price_chapchas} WHERE leader_id = {li}")
                        price_fu_chapchas = uch - num
                        c.execute(f"UPDATE user_data SET user_chapchas = {price_fu_chapchas} WHERE user_id = {message.from_user.id}")
                        await message.answer(f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b><i>[{upr}]</i></b> <a href='tg://user?id={message.from_user.id}'>{un}</a> –≤–ª–æ–∂–∏–ª {num} —á–∞–ø—á–µ–π –Ω–∞ —Å—á–µ—Ç –∫–ª–∞–Ω–∞ {cn}!""", parse_mode="HTML")
                    else:
                        await message.answer("–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤–ª–æ–∂–µ–Ω–∏—è 1 –∫–æ–∫–æ—Å")
                else:
                    await message.answer("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!!!")
        except:
            await message.answer("–≤–ª–æ–∂–∏—Ç—å –∫–æ–∫–æ—Å—ã —á–∏—Å–ª–æ")
    except:
        pass
    db.commit()
    db.close()

@dp.message_handler(Text(startswith=['–í–ª–æ–∂–∏—Ç—å —Ç–∏–º–æ—à–∏', '–í–∫–∏–Ω—É—Ç—å —Ç–∏–º–æ—à–∏', '–≤–ª–æ–∂–∏—Ç—å —Ç–∏–º–æ—à—ã', '–≤–∫–∏–Ω—É—Ç—å —Ç–∏–º–æ—à–∏']))
async def vst_v_clan(message: types.Message):
    db = sqlite3.connect('chapcha_data_base.db')
    c = db.cursor()
    try:
        num = int(message.text[16:])
        try:
            c.execute(f"SELECT * from clan_data")
            items = c.fetchall()
            clanl = []
            for el in items:
                for e in el:
                    clanl.append(e)
            clan = []
            for el in clanl:
                if el == '' or el == None or el == 'None':
                    pass
                else:
                    clan.append(el)
            li = 0
            mbn = 0
            for el in clan:
                if el == message.from_user.id:
                    for i in range(1, 500):
                        c.execute(f"SELECT leader_id FROM clan_data WHERE mb{i} = {message.from_user.id}")
                        items = c.fetchall()
                        for el in items:
                            li = 0
                            if el[0] == None or el[0] == '':
                                pass
                            else:
                                li = el[0]
                                mbn = i
                                break
                        if li != 0:
                            break
            c.execute(f"SELECT leader_id FROM clan_data WHERE leader_id = {message.from_user.id}")
            items = c.fetchall()
            for el in items:
                if el[0] == None or el[0] == '':
                    pass
                else:
                    li = el[0]
            if li == 0 and mbn == 0:
                await message.answer("–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ((")
            else:
                if mbn != 0:
                    c.execute(f"SELECT clan_name, clan_freebases FROM clan_data WHERE mb{mbn} = {message.from_user.id}")
                else:
                    c.execute(f"SELECT clan_name, clan_freebases FROM clan_data WHERE leader_id = {message.from_user.id}")
                items = c.fetchall()
                for el in items:
                    cn = el[0]
                    cf = el[1]
                c.execute(f"SELECT user_nick, user_prefix, user_freebases FROM user_data WHERE user_id = {message.from_user.id}")
                items = c.fetchall()
                for el in items:
                    un = el[0]
                    upr = el[1]
                    uf = el[2]
                if num <= uf:
                    if num > 0:
                        price_freebases = cf + num
                        c.execute(f"UPDATE clan_data SET clan_freebases = {price_freebases} WHERE leader_id = {li}")
                        price_fu_freebases = uf - num
                        c.execute(f"UPDATE user_data SET user_freebases = {price_fu_freebases} WHERE user_id = {message.from_user.id}")
                        await message.answer(f"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b><i>[{upr}]</i></b> <a href='tg://user?id={message.from_user.id}'>{un}</a> –≤–ª–æ–∂–∏–ª {num} —Ñ—Ä–∏–±–∞—Å–æ–≤ –Ω–∞ —Å—á–µ—Ç –∫–ª–∞–Ω–∞ {cn}!""", parse_mode="HTML")
                    else:
                        await message.answer("–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤–ª–æ–∂–µ–Ω–∏—è 1 —Ç–∏–º–æ—à–∞")
                else:
                    await message.answer("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
        except:
            await message.answer("–≤–ª–æ–∂–∏—Ç—å —Ç–∏–º–æ—à–∏ —á–∏—Å–ª–æ")
    except:
        pass
    db.commit()
    db.close()